diff --git a/source/kernel/bank5/fdisk.c b/source/kernel/bank5/fdisk.c
index 4665e66..19a655e 100644
--- a/source/kernel/bank5/fdisk.c
+++ b/source/kernel/bank5/fdisk.c
@@ -87,9 +87,9 @@ ulong fakeDeviceSizeInK;
 
 #define HideCursor() print("\x1Bx5")
 #define DisplayCursor() print("\x1By5")
-#define CursorDown() putchar('\x1F')
-#define CursorUp() putchar('\x1E')
-#define ClearScreen() putchar('\x0C')
+#define CursorDown() _putchar('\x1F')
+#define CursorUp() _putchar('\x1E')
+#define ClearScreen() _putchar('\x0C')
 #define HomeCursor() print("\x0D\x1BK")
 #define DeleteToEndOfLine() print("\x1BK")
 #define DeleteToEndOfLineAndCursorDown() print("\x1BK\x1F");
@@ -147,7 +147,7 @@ void Locate(byte x, byte y);
 void LocateX(byte x);
 void PrintCentered(char* string);
 void PrintStateMessage(char* string);
-void putchar(char ch);
+void _putchar(char ch);
 void print(char* string);
 int CallFunctionInExtraBank(int functionNumber, void* parametersBuffer);
 
@@ -934,9 +934,9 @@ void ShowPartitions()
 void PrintOnePartitionInfo(partitionInfo* info)
 {
 	if(!partitionsExistInDisk && partitionsCount <= 4) {
-		putchar(info->primaryIndex == 1 ? '1' : info->extendedIndex + 1 + '0');
+		_putchar(info->primaryIndex == 1 ? '1' : info->extendedIndex + 1 + '0');
 	} else {
-		putchar(info->primaryIndex + '0');
+		_putchar(info->primaryIndex + '0');
 		if(info->extendedIndex != 0) {
 			printf("-%i", info->extendedIndex);
 		}
@@ -1505,7 +1505,7 @@ void PrintRuler()
 
 	HomeCursor();
 	for(i = 0; i < currentScreenConfig.screenWidth; i++) {
-		putchar('-');
+		_putchar('-');
 	}
 }
 
@@ -1543,7 +1543,7 @@ void PrintStateMessage(char* string)
 }
 
 
-void putchar(char ch) __naked
+void _putchar(char ch) __naked
 {
     __asm
     push    ix
diff --git a/source/kernel/bank5/fdisk2.c b/source/kernel/bank5/fdisk2.c
index b0620bc..27d3509 100644
--- a/source/kernel/bank5/fdisk2.c
+++ b/source/kernel/bank5/fdisk2.c
@@ -54,7 +54,7 @@ byte WriteSectorToDevice(byte driverSlot, byte deviceIndex, byte lunIndex, ulong
 int remote_PreparePartitionningProcess(byte* callerParameters);
 int remote_CreatePartition(byte* callerParameters);
 int CreatePartition(int index);
-void putchar(char ch);
+void _putchar(char ch);
 void Locate(byte x, byte y);
 
 //BC = function number (defined in fdisk.h), HL = address of parameters block
@@ -561,7 +561,7 @@ int CreatePartition(int index)
 }
 
 
-void putchar(char ch) __naked
+void _putchar(char ch) __naked
 {
     __asm
     push    ix
@@ -583,4 +583,4 @@ void Locate(byte x, byte y)
 }
 
 
-#include "asmcall.c"
\ No newline at end of file
+#include "asmcall.c"
